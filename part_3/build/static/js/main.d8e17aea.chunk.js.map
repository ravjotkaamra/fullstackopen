{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","text","filterName","handleFiltering","value","onChange","PersonForm","props","newName","newNumber","addPerson","handleNameChange","handleNumberChange","onSubmit","type","Person","person","name","number","onClick","onDelete","Persons","persons","map","id","Notification","message","error","className","baseUrl","services","getAll","axios","get","then","response","data","create","newObject","post","update","put","remove","delete","App","useState","setPersons","setNewName","setNewNumber","setFilter","displayMessage","setMessage","isError","setError","useEffect","console","log","personService","initialPersons","filteredPersons","filter","toUpperCase","includes","slice","trim","event","target","preventDefault","newPersonObj","find","p","window","confirm","returnedPerson","newPersons","setTimeout","catch","updatePerson","concat","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8e17aea.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ text, filterName, handleFiltering }) => {\n\n  return (\n    <div>\n      {text}\n      <input value={filterName} onChange={handleFiltering} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = (props) => {\n  const {\n    newName,\n    newNumber,\n    addPerson,\n    handleNameChange,\n    handleNumberChange,\n  } = props;\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = (props) => {\n  return (\n    <div>\n      {props.person.name} {props.person.number}{\" \"}\n      <button onClick={props.onDelete}>delete</button>\n    </div>\n  );\n};\n\nconst Persons = ({ persons, onDelete }) => {\n  return (\n    <div>\n      {persons.map((person) => (\n        <Person\n          key={person.id}\n          person={person}\n          onDelete={() => onDelete(person)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Notification = ({ message, error }) => {\n  if (message === null) {\n    return null;\n  }\n\n  const className = error ? \"error\" : \"success\";\n  return <div className={className}>{message}</div>;\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst services = {\n  getAll,\n  create,\n  update,\n  remove,\n};\nexport default services;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\nimport personService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n\n  // for handling input of name field\n  const [newName, setNewName] = useState(\"\");\n\n  // for handling input of phone field\n  const [newNumber, setNewNumber] = useState(\"\");\n\n  // for handling input of find field\n  const [filterName, setFilter] = useState(\"\");\n\n  // for sending messages after success or failure\n  // after create, update or delete\n  const [displayMessage, setMessage] = useState(null);\n  const [isError, setError] = useState(false);\n\n  // to fetch initial persons array from database\n  useEffect(() => {\n    console.log(\"effect\");\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const filteredPersons = persons.filter((person) =>\n    person.name.toUpperCase().includes(filterName.slice().trim().toUpperCase())\n  );\n\n  // for updating phone number if person already exists\n  const updatePerson = (person, newPersonObj) => {\n    personService\n      .update(person.id, newPersonObj)\n      .then((returnedPerson) => {\n        console.log(\"updated\", returnedPerson);\n        const newPersons = persons.map((p) =>\n          p.id !== person.id ? p : returnedPerson\n        );\n        setPersons(newPersons);\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setError(false);\n        setMessage(`Updated Phone Number for ${returnedPerson.name}`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      })\n      .catch((error) => {\n        console.log(\"error :>> \", error);\n        const newPersons = persons.filter((p) => p.id !== person.id);\n        setPersons(newPersons);\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setError(true);\n        setMessage(\n          `Information of ${person.name} has already been removed from server`\n        );\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n  };\n\n  // for adding new persons to the database\n  // called when form is submitted\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const newPersonObj = {\n      name: newName,\n      number: newNumber,\n    };\n\n    // check whether person already exists\n    const person = persons.find((p) => p.name === newName);\n\n    // if person already exists, ask user for updating the phone number\n    if (person) {\n      const confirm = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      );\n\n      if (confirm) {\n        updatePerson(person, newPersonObj);\n      }\n    } else {\n      personService.create(newPersonObj).then((returnedPerson) => {\n        console.log(returnedPerson);\n        setPersons(persons.concat(returnedPerson));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setError(false);\n        setMessage(`Added ${returnedPerson.name}`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  // for deleting persons from the database\n  // called when delete button is clicked\n  const handleDeletePerson = ({ id, name }) => {\n    const confirm = window.confirm(`Delete ${name} ?`);\n\n    console.log(\"Delete\", id, name);\n    console.log(\"confirm :>> \", confirm);\n\n    if (confirm) {\n      personService.remove(id).then((deletedPerson) => {\n        const newPersons = persons.filter((p) => p.id !== id);\n        setPersons(newPersons);\n        setMessage(`Deleted ${name} from Phonebook`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFiltering = (event) => {\n    setFilter(event.target.value);\n  };\n\n  return (\n    <div>\n      <Notification message={displayMessage} error={isError} />\n      <h2>Phonebook</h2>\n      <Filter\n        text=\"filter name with \"\n        filterName={filterName}\n        handleFiltering={handleFiltering}\n      />\n\n      <h3>add a new</h3>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        addPerson={addPerson}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h3>Numbers</h3>\n      <Persons persons={filteredPersons} onDelete={handleDeletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}